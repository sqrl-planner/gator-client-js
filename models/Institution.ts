/* tslint:disable */
/* eslint-disable */
/**
 * Gator API
 * A RESTful API for Gator
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Institution
 */
export interface Institution {
    /**
     * 
     * @type {string}
     * @memberof Institution
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Institution
     */
    parent?: string;
    /**
     * 
     * @type {string}
     * @memberof Institution
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof Institution
     */
    code: string;
}

/**
 * Check if a given object implements the Institution interface.
 */
export function instanceOfInstitution(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function InstitutionFromJSON(json: any): Institution {
    return InstitutionFromJSONTyped(json, false);
}

export function InstitutionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Institution {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'parent': !exists(json, 'parent') ? undefined : json['parent'],
        'type': json['type'],
        'code': json['code'],
    };
}

export function InstitutionToJSON(value?: Institution | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'parent': value.parent,
        'type': value.type,
        'code': value.code,
    };
}

