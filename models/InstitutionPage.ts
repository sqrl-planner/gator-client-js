/* tslint:disable */
/* eslint-disable */
/**
 * Gator API
 * A RESTful API for Gator
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Institution } from './Institution';
import {
    InstitutionFromJSON,
    InstitutionFromJSONTyped,
    InstitutionToJSON,
} from './Institution';

/**
 * 
 * @export
 * @interface InstitutionPage
 */
export interface InstitutionPage {
    /**
     * 
     * @type {string}
     * @memberof InstitutionPage
     */
    lastId?: string;
    /**
     * 
     * @type {Array<Institution>}
     * @memberof InstitutionPage
     */
    institutions?: Array<Institution>;
}

/**
 * Check if a given object implements the InstitutionPage interface.
 */
export function instanceOfInstitutionPage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InstitutionPageFromJSON(json: any): InstitutionPage {
    return InstitutionPageFromJSONTyped(json, false);
}

export function InstitutionPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstitutionPage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastId': !exists(json, 'last_id') ? undefined : json['last_id'],
        'institutions': !exists(json, 'institutions') ? undefined : ((json['institutions'] as Array<any>).map(InstitutionFromJSON)),
    };
}

export function InstitutionPageToJSON(value?: InstitutionPage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'last_id': value.lastId,
        'institutions': value.institutions === undefined ? undefined : ((value.institutions as Array<any>).map(InstitutionToJSON)),
    };
}

